/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import DataBaseManagment.CategoryDAO;
import EndUser.Admin;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;

/**
 *
 * @author karim mamdouh
 */
public class ModifyCategoryPanel1 extends javax.swing.JPanel {

    /**
     * Creates new form DeleteCategoryPanel
     */
    private String[] categories;
    private CategoryDAO CDB;
    private CardLayout cardLayout;
    private JPanel container;
    private Admin admin;
    
    public ModifyCategoryPanel1(CardLayout cardLayout, JPanel container, Admin admin) {
        this.cardLayout = cardLayout;
        this.container = container;
        this.admin = admin;
        CDB = new CategoryDAO();
        categories = new String[CDB.getCategoriesList().size()+1];
        categories[0] = "None";
        for(int i=1 ; i<categories.length ; ++i){
            categories[i] = CDB.getCategoriesList().get(i-1).getName();
        }
        initComponents();
        categoryError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        categoryList = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        modfiyCategoryButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        categoryError = new javax.swing.JLabel();
        modifyCategoryMsg = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));

        setBackground(new java.awt.Color(255, 250, 206));
        setPreferredSize(new java.awt.Dimension(800, 700));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setBackground(new java.awt.Color(255, 250, 206));
        jLabel1.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Modify Category Page");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
        add(jLabel1, gridBagConstraints);

        categoryList.setBackground(new java.awt.Color(255, 255, 255));
        categoryList.setEditable(true);
        categoryList.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        categoryList.setForeground(new java.awt.Color(0, 0, 0));
        categoryList.setModel(new javax.swing.DefaultComboBoxModel<>(categories));
        categoryList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 3, true));
        categoryList.setRenderer(new javax.swing.DefaultListCellRenderer() {
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                // Custom colors for selected and unselected items
                if (isSelected) {
                    label.setBackground(new java.awt.Color(74, 25, 72)); // Custom selected background
                    label.setForeground(java.awt.Color.WHITE); // Custom selected foreground
                } else {
                    label.setBackground(java.awt.Color.WHITE); // Default unselected background
                    label.setForeground(java.awt.Color.BLACK); // Default unselected foreground
                }

                return label;
            }
        }
    );
    categoryList.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            categoryListActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.ipadx = 391;
    gridBagConstraints.ipady = 16;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(categoryList, gridBagConstraints);

    jLabel2.setBackground(new java.awt.Color(255, 250, 206));
    jLabel2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(0, 0, 0));
    jLabel2.setText("Select a Category");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
    add(jLabel2, gridBagConstraints);

    modfiyCategoryButton.setBackground(new java.awt.Color(74, 25, 72));
    modfiyCategoryButton.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
    modfiyCategoryButton.setForeground(new java.awt.Color(244, 242, 226));
    modfiyCategoryButton.setText("Modify Category");
    modfiyCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            modfiyCategoryButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            modfiyCategoryButtonMouseExited(evt);
        }
    });
    modfiyCategoryButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            modfiyCategoryButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 35;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
    add(modfiyCategoryButton, gridBagConstraints);

    backButton.setBackground(new java.awt.Color(74, 25, 72));
    backButton.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
    backButton.setToolTipText("Click to go back");
    backButton.setBorderPainted(false);
    backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    backButton.setFocusPainted(false);
    backButton.setFocusable(false);
    backButton.setMaximumSize(new java.awt.Dimension(145, 60));
    backButton.setMinimumSize(new java.awt.Dimension(145, 60));
    backButton.setPreferredSize(new java.awt.Dimension(145, 60));
    backButton.setRequestFocusEnabled(false);
    backButton.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            backButtonFocusGained(evt);
        }
    });
    backButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            backButtonMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            backButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            backButtonMouseExited(evt);
        }
    });
    backButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
    add(backButton, gridBagConstraints);

    categoryError.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
    categoryError.setForeground(new java.awt.Color(204, 0, 0));
    categoryError.setText("No categroy was selected");
    categoryError.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(categoryError, gridBagConstraints);

    modifyCategoryMsg.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
    modifyCategoryMsg.setForeground(new java.awt.Color(0, 204, 0));
    modifyCategoryMsg.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
    add(modifyCategoryMsg, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    add(filler1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    add(filler2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void categoryListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryListActionPerformed

    private void modfiyCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modfiyCategoryButtonActionPerformed
        // TODO add your handling code here:
        
        categoryError.setVisible(false);
        if(categoryList.getSelectedIndex() == 0){
            categoryError.setVisible(true);
        } else {
            container.add(new ModifyCategoryPanel2(cardLayout, container, CDB.getCategoriesList().get(categoryList.getSelectedIndex()-1)), "modifyCategory");
            categoryList.setSelectedIndex(0);
            cardLayout.show(container, "modifyCategory"); 
        }
    }//GEN-LAST:event_modfiyCategoryButtonActionPerformed

    private void backButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButtonFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonFocusGained

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonMouseClicked

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
        backButton.setBackground(Color.decode("#F4F2E2"));
        backButton.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        backButton.setBorderPainted(true);
        backButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        backButton.setBackground(Color.decode("#4A1948"));
        backButton.setBorderPainted(false);
        backButton.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_backButtonMouseExited

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        cardLayout.show(container, "adminDashboard");
    }//GEN-LAST:event_backButtonActionPerformed

    private void modfiyCategoryButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modfiyCategoryButtonMouseEntered
        // TODO add your handling code here:
        modfiyCategoryButton.setBackground(Color.decode("#F4F2E2"));
        modfiyCategoryButton.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        modfiyCategoryButton.setBorderPainted(true);
        modfiyCategoryButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_modfiyCategoryButtonMouseEntered

    private void modfiyCategoryButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modfiyCategoryButtonMouseExited
        // TODO add your handling code here:
        modfiyCategoryButton.setBackground(Color.decode("#4A1948"));
        modfiyCategoryButton.setBorderPainted(false);
        modfiyCategoryButton.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_modfiyCategoryButtonMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel categoryError;
    private javax.swing.JComboBox<String> categoryList;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton modfiyCategoryButton;
    private javax.swing.JLabel modifyCategoryMsg;
    // End of variables declaration//GEN-END:variables
}
