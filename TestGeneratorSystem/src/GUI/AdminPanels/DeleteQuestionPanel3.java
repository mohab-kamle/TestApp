/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.AdminPanels;

import DataBaseManagment.AdminDAO;
import DataBaseManagment.CategoryDAO;
import DataBaseManagment.QuestionBankDAO;
import EndUser.Admin;
import TestSystem.Category;
import TestSystem.Question;
import TestSystem.QuestionBank;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.net.URL;
import java.util.Scanner;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;

/**
 *
 * @author karim mamdouh
 */
public class DeleteQuestionPanel3 extends javax.swing.JPanel {

    /**
     * Creates new form DeleteCategoryPanel
     */

    private int currQuestionIdx;
    private QuestionBank questionBank;
    private CardLayout cardLayout;
    private JPanel container;
    private Admin admin;   
    private boolean deleted = false;
    
    public DeleteQuestionPanel3(CardLayout cardLayout, JPanel container, QuestionBank questionBank, Admin admin, int currQuestionIdx) {
        this.cardLayout = cardLayout;
        this.container = container;
        this.questionBank = questionBank;
        this.admin = admin;
        this.currQuestionIdx = currQuestionIdx;
        initComponents();
        confirmMsg.setText("Sure you want to delete this question ?");
        confirmMsg.setForeground(Color.black);
    }
    public void setAdmin(Admin admin){this.admin = admin;}
    public Admin getAdmin() {return admin;}
    public void setQuestionBank(QuestionBank questionBank){this.questionBank = questionBank;}
    public QuestionBank getQuestionBank(){return questionBank;}
    public void setCurrQuestionIdx(int currQuestionIdx){this.currQuestionIdx = currQuestionIdx;}
    public int getCurrQuestionIdx(){return currQuestionIdx;}
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        confirmMsg = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        modifyCategoryMsg = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));
        backButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 100), new java.awt.Dimension(0, 100), new java.awt.Dimension(32767, 100));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 0), new java.awt.Dimension(500, 0), new java.awt.Dimension(500, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(700, 0), new java.awt.Dimension(700, 0), new java.awt.Dimension(700, 32767));

        setBackground(new java.awt.Color(255, 250, 206));
        setPreferredSize(new java.awt.Dimension(800, 700));
        setLayout(new java.awt.GridBagLayout());

        confirmMsg.setBackground(new java.awt.Color(255, 250, 206));
        confirmMsg.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        confirmMsg.setForeground(new java.awt.Color(0, 0, 0));
        confirmMsg.setText("Sure you want to delete this question ?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
        add(confirmMsg, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(74, 25, 72));
        jButton1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(244, 242, 226));
        jButton1.setText("Yes, I'm sure.");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
        add(jButton1, gridBagConstraints);

        modifyCategoryMsg.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        modifyCategoryMsg.setForeground(new java.awt.Color(0, 204, 0));
        modifyCategoryMsg.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        add(modifyCategoryMsg, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(filler2, gridBagConstraints);

        backButton.setBackground(new java.awt.Color(74, 25, 72));
        backButton.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        backButton.setToolTipText("Click to go back");
        backButton.setBorderPainted(false);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.setFocusPainted(false);
        backButton.setFocusable(false);
        backButton.setMaximumSize(new java.awt.Dimension(145, 60));
        backButton.setMinimumSize(new java.awt.Dimension(145, 60));
        backButton.setPreferredSize(new java.awt.Dimension(145, 60));
        backButton.setRequestFocusEnabled(false);
        backButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                backButtonFocusGained(evt);
            }
        });
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        add(backButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        add(filler4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        add(filler5, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            try {
            // 6. Remove the question
            Question questionToDelete = questionBank.getQuestions().get(currQuestionIdx);
            questionBank.removeQuestion(questionToDelete);

            // 7. Update QuestionBank and admin in the database
            AdminDAO ADB = new AdminDAO();
            for (QuestionBank ownedBank : admin.getOwnedBanks()) {
                if (ownedBank.getBankID().equals(questionBank.getBankID())) {
                    ownedBank.setQuestions(questionBank.getQuestions());
                }
            }
            ADB.updateAdmin(admin);
            QuestionBankDAO QBDB = new QuestionBankDAO();
            boolean updated = QBDB.updateQuestionBank(questionBank);
            if (updated) {
                confirmMsg.setText("Question successfully deleted from the question bank!");
                confirmMsg.setForeground(Color.green);
                jButton1.setVisible(false);
                deleted = true;
            } else {
                confirmMsg.setText("Failed to update question bank in database.");
                confirmMsg.setForeground(Color.red);
                jButton1.setVisible(false);
            }

        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setBackground(Color.decode("#F4F2E2"));
        jButton1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        jButton1.setBorderPainted(true);
        jButton1.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setBackground(Color.decode("#4A1948"));
        jButton1.setBorderPainted(false);
        jButton1.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_jButton1MouseExited

    private void backButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButtonFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonFocusGained

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonMouseClicked

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
        URL iconURL = getClass().getResource("/lib/turn-back.png");
        if (iconURL != null) {
            backButton.setIcon(new javax.swing.ImageIcon(iconURL));
        } else {
            // Handle the error, e.g., log it or show a default icon
            System.err.println("Resource not found: /lib/turn-back.png");
        }
        backButton.setBackground(Color.decode("#F4F2E2"));
        backButton.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        backButton.setBorderPainted(true);
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        URL iconURL = getClass().getResource("/lib/turnback-40.png");
        if (iconURL != null) {
            backButton.setIcon(new javax.swing.ImageIcon(iconURL));
        } else {
            // Handle the error, e.g., log it or show a default icon
            System.err.println("Resource not found: /lib/turnback-40.png");
        }
        backButton.setBackground(Color.decode("#4A1948"));
        backButton.setBorderPainted(false);
        backButton.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_backButtonMouseExited

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if(deleted){
            String[] navList = new String[questionBank.getQuestions().size()];
            for(int i=0 ; i<navList.length ; ++i){
                navList[i] = "Question "+(i+1);
            }
            for(int i=0 ; i<questionBank.getQuestions().size() ; ++i){
                container.add(new DeleteQuestionPanel2(cardLayout,container,questionBank,admin,i, navList), "deleteQuestion2_Q"+(i+1));
            }
            if(!questionBank.getQuestions().isEmpty())cardLayout.show(container, "deleteQuestion2_Q"+(currQuestionIdx != 0 ? currQuestionIdx : currQuestionIdx + 1)) ;
            else cardLayout.show(container, "deleteQuestion1"); 
        } else cardLayout.show(container, "deleteQuestion2_Q"+( currQuestionIdx + 1)) ;
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel confirmMsg;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel modifyCategoryMsg;
    // End of variables declaration//GEN-END:variables
}
