/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.AdminPanels;

import DataBaseManagment.AdminDAO;
import DataBaseManagment.CategoryDAO;
import DataBaseManagment.QuestionBankDAO;
import EndUser.Admin;
import TestSystem.Category;
import TestSystem.Question;
import TestSystem.Question.dlevel;
import TestSystem.QuestionBank;
import static TestSystem.TestGeneratorApp.ifColorfullPrintln;
import UserDefinedFunctionalities.TerminalColors;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author karim mamdouh
 */
public class UpdateQuestionPanel3 extends javax.swing.JPanel {

    /**
     * Creates new form AddQuestionPanel2
     */
    private String[] difficultyLevels = {"None", "Easy", "Medium", "Hard"};
    private Admin admin;
    private Category selectedCategory;
    private Question.dlevel difficulty;
    private QuestionBank questionBank;
    private  int currQuestionIdx;
    private CardLayout cardLayout;
    private JPanel container;
    
    public UpdateQuestionPanel3(CardLayout cardLayout, JPanel container, QuestionBank questionBank, Category selectedCategory, Admin admin, int currQuestionIdx) {
        this.cardLayout = cardLayout;
        this.container = container;
        this.questionBank = questionBank;
        this.admin = admin;
        this.currQuestionIdx = currQuestionIdx;
        this.selectedCategory = selectedCategory;
        
        initComponents();
        
        Question oldQuestion = questionBank.getQuestions().get(currQuestionIdx);
        questionStatementTA.setText(oldQuestion.getStatement());
        choiceATF.setText(oldQuestion.getChoices()[0]);
        choiceBTF.setText(oldQuestion.getChoices()[1]);
        choiceCTF.setText(oldQuestion.getChoices()[2]);
        choiceDTF.setText(oldQuestion.getChoices()[3]);
        choicesList.setSelectedIndex(oldQuestion.getRightAnswer()+1);
        switch(oldQuestion.getDifficulty()){
            case dlevel.EASY -> difficultyList.setSelectedIndex(1);
            case dlevel.MEDIUM -> difficultyList.setSelectedIndex(2);
            case dlevel.HARD -> difficultyList.setSelectedIndex(3);
        }
        answerError.setVisible(false);
        choiceAError.setVisible(false);        
        choiceBError.setVisible(false);        
        choiceCError.setVisible(false);       
        choiceDError.setVisible(false);      
        statementError.setVisible(false);    
        difficultyError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        choiceATF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        saveChangesButton = new javax.swing.JButton();
        choicesList = new javax.swing.JComboBox<>();
        choiceBTF = new javax.swing.JTextField();
        choiceCTF = new javax.swing.JTextField();
        choiceDTF = new javax.swing.JTextField();
        statementError = new javax.swing.JLabel();
        choiceAError = new javax.swing.JLabel();
        choiceBError = new javax.swing.JLabel();
        answerError = new javax.swing.JLabel();
        choiceCError = new javax.swing.JLabel();
        choiceDError = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionStatementTA = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(150, 0), new java.awt.Dimension(150, 0), new java.awt.Dimension(150, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(170, 0), new java.awt.Dimension(170, 0), new java.awt.Dimension(170, 32767));
        difficultyError = new javax.swing.JLabel();
        difficultyList = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 250, 206));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setBackground(new java.awt.Color(255, 250, 206));
        jLabel1.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Update Question ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 30, 30);
        add(jLabel1, gridBagConstraints);

        choiceATF.setBackground(new java.awt.Color(255, 255, 255));
        choiceATF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        choiceATF.setForeground(new java.awt.Color(0, 0, 0));
        choiceATF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
        choiceATF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceATFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 353;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(choiceATF, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(255, 250, 206));
        jLabel5.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Choice A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel5, gridBagConstraints);

        jLabel7.setBackground(new java.awt.Color(255, 250, 206));
        jLabel7.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Choice D");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel7, gridBagConstraints);

        jLabel8.setBackground(new java.awt.Color(255, 250, 206));
        jLabel8.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Choice C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel8, gridBagConstraints);

        jLabel9.setBackground(new java.awt.Color(255, 250, 206));
        jLabel9.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Choice B");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel9, gridBagConstraints);

        jLabel6.setBackground(new java.awt.Color(255, 250, 206));
        jLabel6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Select the answer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel6, gridBagConstraints);

        backButton.setBackground(new java.awt.Color(74, 25, 72));
        backButton.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        backButton.setToolTipText("Click to go back");
        backButton.setBorderPainted(false);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.setFocusPainted(false);
        backButton.setFocusable(false);
        backButton.setMaximumSize(new java.awt.Dimension(145, 60));
        backButton.setMinimumSize(new java.awt.Dimension(145, 60));
        backButton.setPreferredSize(new java.awt.Dimension(145, 60));
        backButton.setRequestFocusEnabled(false);
        backButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                backButtonFocusGained(evt);
            }
        });
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        add(backButton, gridBagConstraints);

        saveChangesButton.setBackground(new java.awt.Color(74, 25, 72));
        saveChangesButton.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        saveChangesButton.setForeground(new java.awt.Color(244, 242, 226));
        saveChangesButton.setText("Save changes");
        saveChangesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveChangesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveChangesButtonMouseExited(evt);
            }
        });
        saveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 4;
        add(saveChangesButton, gridBagConstraints);

        choicesList.setBackground(new java.awt.Color(255, 255, 255));
        choicesList.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        choicesList.setForeground(new java.awt.Color(0, 0, 0));
        choicesList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"None", "Choice A", "Choice B", "Choice C", "Choice D"}));
        choicesList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
        choicesList.setRenderer(new javax.swing.DefaultListCellRenderer() {
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                // Custom colors for selected and unselected items
                if (isSelected) {
                    label.setBackground(new java.awt.Color(74, 25, 72)); // Custom selected background
                    label.setForeground(java.awt.Color.WHITE); // Custom selected foreground
                } else {
                    label.setBackground(java.awt.Color.WHITE); // Default unselected background
                    label.setForeground(java.awt.Color.BLACK); // Default unselected foreground
                }

                return label;
            }
        }
    );
    choicesList.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            choicesListActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 345;
    gridBagConstraints.ipady = 11;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(choicesList, gridBagConstraints);

    choiceBTF.setBackground(new java.awt.Color(255, 255, 255));
    choiceBTF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    choiceBTF.setForeground(new java.awt.Color(0, 0, 0));
    choiceBTF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
    choiceBTF.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            choiceBTFActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 353;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(choiceBTF, gridBagConstraints);

    choiceCTF.setBackground(new java.awt.Color(255, 255, 255));
    choiceCTF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    choiceCTF.setForeground(new java.awt.Color(0, 0, 0));
    choiceCTF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
    choiceCTF.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            choiceCTFActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 353;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(choiceCTF, gridBagConstraints);

    choiceDTF.setBackground(new java.awt.Color(255, 255, 255));
    choiceDTF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    choiceDTF.setForeground(new java.awt.Color(0, 0, 0));
    choiceDTF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
    choiceDTF.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            choiceDTFActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 353;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(choiceDTF, gridBagConstraints);

    statementError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    statementError.setForeground(new java.awt.Color(255, 0, 0));
    statementError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(statementError, gridBagConstraints);

    choiceAError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    choiceAError.setForeground(new java.awt.Color(255, 0, 0));
    choiceAError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(choiceAError, gridBagConstraints);

    choiceBError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    choiceBError.setForeground(new java.awt.Color(255, 0, 0));
    choiceBError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(choiceBError, gridBagConstraints);

    answerError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    answerError.setForeground(new java.awt.Color(255, 0, 0));
    answerError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(answerError, gridBagConstraints);

    choiceCError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    choiceCError.setForeground(new java.awt.Color(255, 0, 0));
    choiceCError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(choiceCError, gridBagConstraints);

    choiceDError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    choiceDError.setForeground(new java.awt.Color(255, 0, 0));
    choiceDError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(choiceDError, gridBagConstraints);

    questionStatementTA.setBackground(new java.awt.Color(255, 255, 255));
    questionStatementTA.setColumns(20);
    questionStatementTA.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    questionStatementTA.setForeground(new java.awt.Color(0, 0, 0));
    questionStatementTA.setRows(4);
    questionStatementTA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(74, 25, 72), 5));
    jScrollPane1.setViewportView(questionStatementTA);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 395;
    gridBagConstraints.ipady = 94;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(jScrollPane1, gridBagConstraints);

    jLabel10.setBackground(new java.awt.Color(255, 250, 206));
    jLabel10.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
    jLabel10.setForeground(new java.awt.Color(0, 0, 0));
    jLabel10.setText("Question Statement");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.ipadx = 9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(jLabel10, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    add(filler2, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    add(filler3, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    add(filler4, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    add(filler5, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 8;
    add(filler6, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 10;
    add(filler7, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 12;
    add(filler8, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    add(filler1, gridBagConstraints);

    difficultyError.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
    difficultyError.setForeground(new java.awt.Color(255, 0, 0));
    difficultyError.setText("Wrong Password. Please, try again");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
    add(difficultyError, gridBagConstraints);

    difficultyList.setBackground(new java.awt.Color(255, 255, 255));
    difficultyList.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
    difficultyList.setForeground(new java.awt.Color(0, 0, 0));
    difficultyList.setModel(new javax.swing.DefaultComboBoxModel<>(difficultyLevels));
    difficultyList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(74, 25, 72), 5, true));
    difficultyList.setRenderer(new javax.swing.DefaultListCellRenderer() {
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

            // Custom colors for selected and unselected items
            if (isSelected) {
                label.setBackground(new java.awt.Color(74, 25, 72)); // Custom selected background
                label.setForeground(java.awt.Color.WHITE); // Custom selected foreground
            } else {
                label.setBackground(java.awt.Color.WHITE); // Default unselected background
                label.setForeground(java.awt.Color.BLACK); // Default unselected foreground
            }

            return label;
        }
    }
    );
    difficultyList.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            difficultyListActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 311;
    gridBagConstraints.ipady = 13;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(difficultyList, gridBagConstraints);

    jLabel4.setBackground(new java.awt.Color(255, 250, 206));
    jLabel4.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(0, 0, 0));
    jLabel4.setText("Select Difficulty");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(jLabel4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButtonFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonFocusGained

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_backButtonMouseClicked

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
        URL iconURL = getClass().getResource("/lib/turn-back.png");
        if (iconURL != null) {
            backButton.setIcon(new javax.swing.ImageIcon(iconURL));
        } else {
        // Handle the error, e.g., log it or show a default icon 
            System.err.println("Resource not found: /lib/turn-back.png");
        }
        backButton.setBackground(Color.decode("#F4F2E2"));
        backButton.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        backButton.setBorderPainted(true);
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        URL iconURL = getClass().getResource("/lib/turnback-40.png");
        if (iconURL != null) {
            backButton.setIcon(new javax.swing.ImageIcon(iconURL));
        } else {
            // Handle the error, e.g., log it or show a default icon
            System.err.println("Resource not found: /lib/turnback-40.png");
        }
        backButton.setBackground(Color.decode("#4A1948"));
        backButton.setBorderPainted(false);
        backButton.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_backButtonMouseExited

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        cardLayout.show(container, "updateQuestion2_Q"+(currQuestionIdx+1)); 
    }//GEN-LAST:event_backButtonActionPerformed

    private void choiceCTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceCTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choiceCTFActionPerformed

    private void choiceBTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceBTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choiceBTFActionPerformed

    private void choiceATFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceATFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choiceATFActionPerformed

    private void choiceDTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceDTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choiceDTFActionPerformed

    private void choicesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choicesListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choicesListActionPerformed

    private void saveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesButtonActionPerformed
        // TODO add your handling code here:
        answerError.setVisible(false);
        choiceAError.setVisible(false);
        choiceBError.setVisible(false);
        choiceCError.setVisible(false);
        choiceDError.setVisible(false);
        statementError.setVisible(false);
        difficultyError.setVisible(false);

        boolean errorFound = false;

        String statement = admin.getValidStatement(questionStatementTA, statementError);
        if (statement == null) {
            errorFound = true;
        }

        JTextField chiocesTFs[] = {choiceATF,choiceBTF,choiceCTF,choiceDTF};
        JLabel chiocesErrors[] = {choiceAError,choiceBError,choiceCError,choiceDError};

        String[] choices = admin.getValidChoices(chiocesTFs , chiocesErrors);
        if (choices == null) {
            errorFound = true;
        }

        Integer rightAnswer = admin.getValidRightAnswer(choicesList, answerError, choices);
        if (rightAnswer == null) {                
            errorFound = true;
        }
        
        Question.dlevel difficulty = admin.selectDifficultyLevel(difficultyList, difficultyError);
         if (difficulty == null) {
           errorFound = true;
        }

        if(!errorFound){
            Question newQuestion = new Question(selectedCategory.getCategoryId(), statement, difficulty, rightAnswer, choices);
            container.add(new UpdateQuestionPanel4( cardLayout,  container,  questionBank, selectedCategory,admin,  currQuestionIdx, newQuestion), "updateQuestion4");
            cardLayout.show(container, "updateQuestion4");
        }

    }//GEN-LAST:event_saveChangesButtonActionPerformed

    private void saveChangesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesButtonMouseEntered
        // TODO add your handling code here:
        saveChangesButton.setBackground(Color.decode("#F4F2E2"));
        saveChangesButton.setBorder(BorderFactory.createLineBorder(Color.BLACK, 5, true));
        saveChangesButton.setBorderPainted(true);
        saveChangesButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_saveChangesButtonMouseEntered

    private void saveChangesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesButtonMouseExited
        // TODO add your handling code here:
        saveChangesButton.setBackground(Color.decode("#4A1948"));
        saveChangesButton.setBorderPainted(false);
        saveChangesButton.setForeground(Color.decode("#F4F2E2"));
    }//GEN-LAST:event_saveChangesButtonMouseExited

    private void difficultyListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_difficultyListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answerError;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel choiceAError;
    private javax.swing.JTextField choiceATF;
    private javax.swing.JLabel choiceBError;
    private javax.swing.JTextField choiceBTF;
    private javax.swing.JLabel choiceCError;
    private javax.swing.JTextField choiceCTF;
    private javax.swing.JLabel choiceDError;
    private javax.swing.JTextField choiceDTF;
    private javax.swing.JComboBox<String> choicesList;
    private javax.swing.JLabel difficultyError;
    private javax.swing.JComboBox<String> difficultyList;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea questionStatementTA;
    private javax.swing.JButton saveChangesButton;
    private javax.swing.JLabel statementError;
    // End of variables declaration//GEN-END:variables
}
